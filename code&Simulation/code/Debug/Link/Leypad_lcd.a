;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0

	.DSEG
_0x4:
	.BYTE 0x1F
;char keypad();
;void Insert_data() ;
;unsigned char EE_Read(unsigned int address);
;void EE_Write(unsigned int add, unsigned char data);
;void MyCode();
;void alarm();
;void readid();
;void readpass();
;void checkPass();
;void confirmPass();
;void confirmId();
;void ChangeId();
;void ChangePass();
;void Admin();
;void main(void)
; 0000 0029 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 002A 
; 0000 002B DDRC = 0b00000111;  //port c.0,1,2 as  output port c.3,4,5,6,7 as  input
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002C 
; 0000 002D PORTC = 0b11111000; //active pull up at port c.3,4,5,6,7
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002E 
; 0000 002F DDRD.4=1;           //port D.4 as output
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0030 
; 0000 0031 PORTD.3=1;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0032 
; 0000 0033 DDRB=0b00001111;    //port B.0,1,2,3 as output
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0034 
; 0000 0035 
; 0000 0036 SREG.7 = 1;
;PCODE: $00000018 VOL: 0
; 0000 0037 
; 0000 0038 GICR |= 0b10000000;     //active Intrrupt 1
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0039 
; 0000 003A MCUCR  |= 0b00001100;  // Rising Edge
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 003B 
; 0000 003C lcd_init(16);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 003D 
; 0000 003E Insert_data();         //insert  data to EEPROM
;PCODE: $00000021 VOL: 0
; 0000 003F 
; 0000 0040 while (1)
;PCODE: $00000022 VOL: 0
; 0000 0041 {
; 0000 0042 
; 0000 0043 MyCode();
;PCODE: $00000023 VOL: 0
; 0000 0044 
; 0000 0045 }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0046 }
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;void MyCode(){
; 0000 004A void MyCode(){
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 004B 
; 0000 004C lcd_clear();  //make lcd empty
;PCODE: $0000002B VOL: 0
; 0000 004D 
; 0000 004E x= keypad();
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 004F 
; 0000 0050 if(x==10){
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0051 
; 0000 0052 lcd_clear();
;PCODE: $00000032 VOL: 0
; 0000 0053 
; 0000 0054 lcd_printf("Enter your ID   ");
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0055 
; 0000 0056 readid();   // Enter 3digits Id
;PCODE: $0000003A VOL: 0
; 0000 0057 
; 0000 0058 lcd_clear();
;PCODE: $0000003B VOL: 0
; 0000 0059 
; 0000 005A checkPass();  // Enter 3digits pass
;PCODE: $0000003C VOL: 0
; 0000 005B 
; 0000 005C lcd_clear();
;PCODE: $0000003D VOL: 0
; 0000 005D 
; 0000 005E if(counter>=3){    // user enter wrong pass 3 times
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 005F 
; 0000 0060 lcd_printf("You Can't Enter");
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0061 
; 0000 0062 delay_ms(1500);    //wait 1500 ms
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0063 
; 0000 0064 MyCode(); // start from begin and enter new id
;PCODE: $0000004A VOL: 0
; 0000 0065 }
; 0000 0066 
; 0000 0067 lcd_printf("* Close         #Change Pass");   //if user want change his pass or just open the door
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0068 
; 0000 0069 x = keypad();      //enter * or #
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 006A 
; 0000 006B lcd_clear();
;PCODE: $00000056 VOL: 0
; 0000 006C 
; 0000 006D if(x==11){    //user want change his pass
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 006E 
; 0000 006F lcd_clear();
;PCODE: $0000005A VOL: 0
; 0000 0070 
; 0000 0071 lcd_printf("Enter New pass  ");
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0072 
; 0000 0073 readpass();       //user enter his new pass
;PCODE: $00000062 VOL: 0
; 0000 0074 
; 0000 0075 confirmPass();    //user confirm his new pass
;PCODE: $00000063 VOL: 0
; 0000 0076 
; 0000 0077 }
; 0000 0078 lcd_clear();
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0079 
; 0000 007A for(i=0;i<12;i+=2) //search for name
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 007B 
; 0000 007C if( id == Data[i] ) {
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 007D lcd_printf("Welcom %s",names[i/2]);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 007E 
; 0000 007F PORTB.1=1;     // open door
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0080 
; 0000 0081 PORTB.2 = 1;   // turn on led
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0082 
; 0000 0083 PORTB.3=1;     // turn on peep alarm
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0084 
; 0000 0085 delay_ms(2000);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0086 
; 0000 0087 PORTB.1=0;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0088 
; 0000 0089 PORTB.0=1;   //close door
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 008A 
; 0000 008B delay_ms(2000);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 008C 
; 0000 008D PORTB.2 = 0;    //turn off led
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 008E 
; 0000 008F PORTB.3=0;     // turn off peep alarm
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0090 
; 0000 0091 PORTB.0=0;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0092 }
; 0000 0093 }
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0094 
; 0000 0095 
; 0000 0096 
; 0000 0097 }
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;void alarm() {
; 0000 009A void alarm() {
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 009B 
; 0000 009C PORTB.2 = 1;   // turn on led
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 009D 
; 0000 009E PORTB.3=1;     // turn on peep alarm
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 009F 
; 0000 00A0 delay_ms(1500);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 00A1 
; 0000 00A2 PORTB.2 = 0;    //turn off led
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00A3 
; 0000 00A4 PORTB.3=0;     // turn off peep alarm
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00A5 }
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;void ChangePass(){
; 0000 00A9 void ChangePass(){
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 00AA 
; 0000 00AB char m=oldPass;  //pass
; 0000 00AC 
; 0000 00AD for(i=0;i<12;i+=2)if(id==Data[i]){Data[i+1]=oldPass;break;} //change old pass to new one in Data array
;PCODE: $000000B4 VOL: 0
;	m -> R17
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00AE 
; 0000 00AF //change old pass to new one in EEPROM
; 0000 00B0 
; 0000 00B1 EE_Write(id,m);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 00B2 
; 0000 00B3 m=oldPass>>8;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 00B4 
; 0000 00B5 EE_Write(id+1,m );
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00B6 }
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;void confirmPass(){
; 0000 00BA void confirmPass(){
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 00BB 
; 0000 00BC oldPass=pass;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 00BD 
; 0000 00BE for(counter=0;counter<3;counter++){
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 00BF 
; 0000 00C0 lcd_clear();
;PCODE: $000000F3 VOL: 0
; 0000 00C1 
; 0000 00C2 lcd_printf("Confirm new pass  ");
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00C3 
; 0000 00C4 readpass();              //enter new pass again
;PCODE: $000000FB VOL: 0
; 0000 00C5 
; 0000 00C6 if(pass==oldPass) break;  //new pass is confirmed  loop will stop
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 00C7 
; 0000 00C8 lcd_clear();
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 00C9 
; 0000 00CA lcd_printf("Pass not Match  "); //new pass is not confirmed
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00CB 
; 0000 00CC alarm();
;PCODE: $00000109 VOL: 0
; 0000 00CD 
; 0000 00CE }
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 00CF lcd_clear();
;PCODE: $00000111 VOL: 0
; 0000 00D0 
; 0000 00D1 
; 0000 00D2 if(counter>=3){ //user can't confirm his new pass 3 times so pass did't change
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00D3 
; 0000 00D4 lcd_printf("Pass Can't change");
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00D5 
; 0000 00D6 alarm();
;PCODE: $0000011C VOL: 0
; 0000 00D7 }
; 0000 00D8 
; 0000 00D9 else {
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 00DA 
; 0000 00DB ChangePass();   //change old pass to new one
;PCODE: $0000011F VOL: 0
; 0000 00DC 
; 0000 00DD lcd_printf("Pass Changed");    //print at lcd that pass changed
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00DE 
; 0000 00DF delay_ms(1500);    //wait 1500 ms
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00E0 }
;PCODE: $00000129 VOL: 0
; 0000 00E1 
; 0000 00E2 }
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;void checkPass(){
; 0000 00E6 void checkPass(){
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 00E7 
; 0000 00E8 counter=0;
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00E9 
; 0000 00EA while( counter < 3 ){
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00EB 
; 0000 00EC lcd_clear();
;PCODE: $00000134 VOL: 0
; 0000 00ED 
; 0000 00EE lcd_printf("Enter Your Pass ");
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00EF 
; 0000 00F0 readpass();    //reed 3 digits pass
;PCODE: $0000013C VOL: 0
; 0000 00F1 
; 0000 00F2 x=EE_Read(id);   //reed stored pass in EEPROM
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00F3 
; 0000 00F4 y=EE_Read(id+1)<<8;   //reed stored pass in EEPROM
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00F5 
; 0000 00F6 lcd_clear();
;PCODE: $00000146 VOL: 0
; 0000 00F7 
; 0000 00F8 if(x+y==pass) {     //Enterd pass match pass that stored in EEPROM
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00F9 
; 0000 00FA break;
;PCODE: $0000014B VOL: 0
; 0000 00FB }
; 0000 00FC 
; 0000 00FD else {             //Enterd pass dosen't match pass that stored in EEPROM
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 00FE 
; 0000 00FF lcd_printf("Wrong Pass!!");
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0100 
; 0000 0101 alarm();
;PCODE: $00000155 VOL: 0
; 0000 0102 }
;PCODE: $00000156 VOL: 0
; 0000 0103 
; 0000 0104 counter++;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 0105 }
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0106 }
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;void readpass(){
; 0000 010A void readpass(){
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 010B 
; 0000 010C pass=0,c=0;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 010D 
; 0000 010E while(c<3){
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 010F 
; 0000 0110 x = keypad();         //read one digit from keypad
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 0111 
; 0000 0112 pass = pass * 10 + x ; //store 3digits as one int number pass
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0113 
; 0000 0114 lcd_printf("*");
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 0115 
; 0000 0116 c++;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 0117 
; 0000 0118 }
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 0119 x = keypad();       //read one digit from keypad
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 011A }
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;void readid(){
; 0000 011E void readid(){
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 011F 
; 0000 0120 id=0,c=0;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 0121 
; 0000 0122 while( c < 3 ){
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0123 
; 0000 0124 x = keypad();     //read one digit from keypad
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 0125 
; 0000 0126 id = id * 10 + x ;    //store 3digits as one int number id
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 0127 
; 0000 0128 lcd_printf("*");
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 0129 
; 0000 012A c++;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 012B }
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 012C 
; 0000 012D x = keypad();       //read one digit from keypad
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 012E 
; 0000 012F }
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;char keypad()
; 0000 0134 {
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 0135 while(1)
;PCODE: $000001A3 VOL: 0
; 0000 0136 {
; 0000 0137 PORTC.0 = 0; PORTC.1 = 1; PORTC.2 = 1;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 0138 
; 0000 0139 //Only C1 is activated
; 0000 013A 
; 0000 013B switch(PINC)
;PCODE: $000001AA VOL: 0
; 0000 013C {
; 0000 013D case 0b11110110:   //user press 1
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 013E 
; 0000 013F while (PINC.3 == 0);
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 0140 
; 0000 0141 return 1;
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 0142 
; 0000 0143 break;
;PCODE: $000001B5 VOL: 0
; 0000 0144 
; 0000 0145 case 0b11101110:   //user press 4
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 0146 
; 0000 0147 while (PINC.4 == 0);
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 0148 
; 0000 0149 return 4;
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 014A 
; 0000 014B break;
;PCODE: $000001C1 VOL: 0
; 0000 014C 
; 0000 014D case 0b11011110:     //user press 7
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 014E while (PINC.5 == 0);
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 014F return 7;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 0150 break;
;PCODE: $000001CD VOL: 0
; 0000 0151 
; 0000 0152 case 0b10111110:    //user press *
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 0153 while (PINC.6 == 0);
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 0154 return 10;
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 0155 break;
;PCODE: $000001D9 VOL: 0
; 0000 0156 
; 0000 0157 }
;PCODE: $000001DA VOL: 0
; 0000 0158 PORTC.0 = 1; PORTC.1 = 0; PORTC.2 = 1;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 0159 
; 0000 015A //Only C2 is activated
; 0000 015B switch(PINC)
;PCODE: $000001E1 VOL: 0
; 0000 015C {
; 0000 015D case 0b11110101:   //user press 2
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 015E while (PINC.3 == 0);
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 015F return 2;
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0160 break;
;PCODE: $000001EC VOL: 0
; 0000 0161 
; 0000 0162 case 0b11101101:    //user press 5
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 0163 while (PINC.4 == 0);
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 0164 return 5;
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 0165 break;
;PCODE: $000001F8 VOL: 0
; 0000 0166 
; 0000 0167 case 0b11011101:    //user press 8
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 0168 while (PINC.5 == 0);
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 0169 return 8;
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 016A break;
;PCODE: $00000204 VOL: 0
; 0000 016B 
; 0000 016C case 0b10111101:    //user press 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 016D while (PINC.6 == 0);
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 016E return 0;
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 016F break;
;PCODE: $00000210 VOL: 0
; 0000 0170 
; 0000 0171 }
;PCODE: $00000211 VOL: 0
; 0000 0172 
; 0000 0173 PORTC.0 = 1; PORTC.1 = 1; PORTC.2 = 0;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 0174 //Only C3 is activated
; 0000 0175 switch(PINC)
;PCODE: $00000218 VOL: 0
; 0000 0176 {
; 0000 0177 case 0b11110011:   //user press 3
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 0178 while (PINC.3 == 0);
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 0179 return 3;
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 017A break;
;PCODE: $00000223 VOL: 0
; 0000 017B 
; 0000 017C case 0b11101011:    //user press 6
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 017D while (PINC.4 == 0);
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 017E return 6;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 017F break;
;PCODE: $0000022F VOL: 0
; 0000 0180 
; 0000 0181 case 0b11011011:     //user press 9
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 0182 while (PINC.5 == 0);
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0183 return 9;
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 0184 break;
;PCODE: $0000023B VOL: 0
; 0000 0185 
; 0000 0186 case 0b10111011:    //user press #
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 0187 while (PINC.6 == 0);
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 0188 return 11;
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 0189 break;
;PCODE: $00000247 VOL: 0
; 0000 018A 
; 0000 018B }
;PCODE: $00000248 VOL: 0
; 0000 018C 
; 0000 018D }
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 018E }
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;void Insert_data() {
; 0000 0192 void Insert_data() {
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 0193 
; 0000 0194 for (i=0; i < 12; i+=2) {
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 0195 
; 0000 0196 char c=Data[i+1];  //pass
; 0000 0197 
; 0000 0198 //store pass in 2byte in EEPROM
; 0000 0199 
; 0000 019A EE_Write(Data[i],c );
;PCODE: $00000258 VOL: 0
;	c -> Y+0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 019B 
; 0000 019C c=Data[i+1]>>8;
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 019D 
; 0000 019E EE_Write(Data[i]+1,c );
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 019F 
; 0000 01A0 }
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 01A1 }
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;unsigned char EE_Read(unsigned int address)
; 0000 01A6 {
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 01A7 
; 0000 01A8 while(EECR.1 == 1);    //Wait till EEPROM is ready  (eeprom not busy)
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;	address -> R16,R17
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 01A9 EEAR = address;        //Prepare the address you want to read from
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 01AA 
; 0000 01AB EECR.0 = 1;            //Execute read
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 01AC 
; 0000 01AD return EEDR;
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0000 01AE 
; 0000 01AF }
;PCODE: $00000292 VOL: 0
;void EE_Write(unsigned int add, unsigned char data)
; 0000 01B3 {
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0000 01B4 
; 0000 01B5 while(EECR & 0x2 );    //Wait till EEPROM is ready  (eeprom not busy)
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;	add -> R18,R19
;	data -> R17
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 01B6 EEAR = add;        //Prepare the address you want to read from
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
; 0000 01B7 EEDR = data;           //Prepare the data you want to write in the address above
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
; 0000 01B8 EECR.2 = 1;            //Master write enable
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 01B9 EECR.1 = 1;            //Write Enable
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 01BA 
; 0000 01BB }
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;void ChangeId(){
; 0000 01BF void ChangeId(){
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0000 01C0 
; 0000 01C1 for(i=0;i<12;i+=2)if(saveId==Data[i]){Data[i]=id;break;}//change id in Data array
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 01C2 
; 0000 01C3 //restore pass in old id address to new id address
; 0000 01C4 
; 0000 01C5 EE_Write(id,EE_Read(saveId) );
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
; 0000 01C6 
; 0000 01C7 EE_Write(id+1,EE_Read(saveId+1) );
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0000 01C8 
; 0000 01C9 //make old id address value to 0
; 0000 01CA 
; 0000 01CB EE_Write(saveId,0);
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 01CC 
; 0000 01CD EE_Write(saveId+1,0);
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 01CE 
; 0000 01CF 
; 0000 01D0 }
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;void confirmId(){
; 0000 01D4 void confirmId(){
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 01D5 
; 0000 01D6 oldId=id;
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 01D7 
; 0000 01D8 for(counter=0;counter<3;counter++){
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 01D9 
; 0000 01DA lcd_clear();
;PCODE: $000002F2 VOL: 0
; 0000 01DB 
; 0000 01DC lcd_printf("Confirm new Id   ");
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 01DD 
; 0000 01DE readid();          //enter new id again
;PCODE: $000002FA VOL: 0
; 0000 01DF 
; 0000 01E0 if(id==oldId) break;  //new id is confirmed  loop will stop
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 01E1 
; 0000 01E2 lcd_clear();
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 01E3 
; 0000 01E4 lcd_printf("Id not Match  ");  //new id is not confirmed
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0000 01E5 
; 0000 01E6 alarm();
;PCODE: $00000308 VOL: 0
; 0000 01E7 
; 0000 01E8 }
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 01E9 lcd_clear();
;PCODE: $00000310 VOL: 0
; 0000 01EA 
; 0000 01EB 
; 0000 01EC if(counter>=3){   //Admin can't confirm new id 3 times so pass did't change
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 01ED 
; 0000 01EE lcd_printf("Id Can't change");
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 01EF 
; 0000 01F0 alarm();
;PCODE: $0000031B VOL: 0
; 0000 01F1 }
; 0000 01F2 else {
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
; 0000 01F3 
; 0000 01F4 ChangeId();      //change old id to new one
;PCODE: $0000031E VOL: 0
; 0000 01F5 
; 0000 01F6 lcd_printf("Id Changed");
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
; 0000 01F7 
; 0000 01F8 delay_ms(1500);
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
; 0000 01F9 }
;PCODE: $00000328 VOL: 0
; 0000 01FA 
; 0000 01FB }
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;void Admin(){
; 0000 01FF void Admin(){
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
; 0000 0200 
; 0000 0201 lcd_clear();
;PCODE: $0000032D VOL: 0
; 0000 0202 
; 0000 0203 lcd_printf("Enter Your ID   ");
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
; 0000 0204 
; 0000 0205 readid();                        //enter admin id
;PCODE: $00000335 VOL: 0
; 0000 0206 
; 0000 0207 lcd_clear();
;PCODE: $00000336 VOL: 0
; 0000 0208 
; 0000 0209 checkPass();                //enter admin pass
;PCODE: $00000337 VOL: 0
; 0000 020A 
; 0000 020B if(id==Data[10]&&pass==Data[11]){       //enterd id and pass is id,pass of admin
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
; 0000 020C 
; 0000 020D while(1){
;PCODE: $00000344 VOL: 0
; 0000 020E 
; 0000 020F lcd_clear();
;PCODE: $00000345 VOL: 0
; 0000 0210 
; 0000 0211 lcd_printf("* Close         # Edit");
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 0212 
; 0000 0213 x=keypad();
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
; 0000 0214 
; 0000 0215 if(x==11){  // admin want Edit info   he presed #
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
; 0000 0216 
; 0000 0217 lcd_clear();
;PCODE: $00000353 VOL: 0
; 0000 0218 
; 0000 0219 lcd_printf("* Edit id       # Edit Pass"); //press * for edit id press # for edit pass
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
; 0000 021A 
; 0000 021B x=keypad();
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
; 0000 021C 
; 0000 021D if(x==10){   //admin press *
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
; 0000 021E 
; 0000 021F lcd_clear();
;PCODE: $00000361 VOL: 0
; 0000 0220 
; 0000 0221 lcd_printf("Enter ID        ");
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
; 0000 0222 
; 0000 0223 readid();         //read id of person want to be changed
;PCODE: $00000369 VOL: 0
; 0000 0224 
; 0000 0225 lcd_clear();
;PCODE: $0000036A VOL: 0
; 0000 0226 
; 0000 0227 saveId=id;        //saveId is id wanted to be changed
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
; 0000 0228 
; 0000 0229 lcd_printf("Enter new Id    ");
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
; 0000 022A 
; 0000 022B readid();        //enter new id
;PCODE: $00000374 VOL: 0
; 0000 022C 
; 0000 022D confirmId();     //confirm new id
;PCODE: $00000375 VOL: 0
; 0000 022E 
; 0000 022F }
; 0000 0230 else { //press # want change pass
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
; 0000 0231 
; 0000 0232 lcd_clear();
;PCODE: $00000378 VOL: 0
; 0000 0233 
; 0000 0234 lcd_printf("Enter ID        ");
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
; 0000 0235 
; 0000 0236 readid();      //read id of person want to be changed
;PCODE: $00000380 VOL: 0
; 0000 0237 
; 0000 0238 lcd_clear();
;PCODE: $00000381 VOL: 0
; 0000 0239 
; 0000 023A lcd_printf("Enter new Pass   ");
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
; 0000 023B 
; 0000 023C readpass();    //read new pass
;PCODE: $00000389 VOL: 0
; 0000 023D 
; 0000 023E lcd_clear();
;PCODE: $0000038A VOL: 0
; 0000 023F 
; 0000 0240 confirmPass();  //confirm new pass
;PCODE: $0000038B VOL: 0
; 0000 0241 
; 0000 0242 lcd_clear();
;PCODE: $0000038C VOL: 0
; 0000 0243 }
;PCODE: $0000038D VOL: 0
; 0000 0244 
; 0000 0245 }
; 0000 0246 else break;    //press * to close admin mood
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 0247 }
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0000 0248 
; 0000 0249 }
; 0000 024A else { //enterd id and pass is not id,pass of admin
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
; 0000 024B lcd_clear();
;PCODE: $00000396 VOL: 0
; 0000 024C 
; 0000 024D lcd_printf("You are not Admin");
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0000 024E 
; 0000 024F }
;PCODE: $0000039E VOL: 0
; 0000 0250 
; 0000 0251 }
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;interrupt [3] void EXT__INT1(void)
; 0000 0256 {
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0000 0257 SREG.7 = 1; //enable global intrupt
;PCODE: $000003A3 VOL: 0
; 0000 0258 
; 0000 0259 PORTD.4= 1;  //turn on red led
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
; 0000 025A 
; 0000 025B Admin();//admin mood
;PCODE: $000003A6 VOL: 0
; 0000 025C 
; 0000 025D PORTD.4= 0;   //turn off red led
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 025E 
; 0000 025F delay_ms(500);
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
; 0000 0260 
; 0000 0261 lcd_clear();
;PCODE: $000003AB VOL: 0
; 0000 0262 }
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
